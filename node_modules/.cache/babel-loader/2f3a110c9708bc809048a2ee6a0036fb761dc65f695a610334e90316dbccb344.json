{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iahme\\\\marketingsecure\\\\src\\\\components\\\\LessonQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './LessonQuiz.css'; // Optional for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LessonQuiz = ({\n  lessonNumber,\n  onNext,\n  onPrevious\n}) => {\n  _s();\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [score, setScore] = useState(null);\n  const questions = [{\n    question: 'What is phishing?',\n    options: ['A technique to secure passwords', 'An attempt to steal sensitive information by pretending to be a trustworthy entity', 'A type of firewall', 'A form of encryption'],\n    correctAnswer: 'An attempt to steal sensitive information by pretending to be a trustworthy entity'\n  }, {\n    question: 'What should you do if you receive an unsolicited email asking for personal information?',\n    options: ['Ignore the email', 'Click the link and provide the information', 'Mark the email as spam', 'Respond with your personal information'],\n    correctAnswer: 'Mark the email as spam'\n  }, {\n    question: 'What is the main purpose of two-factor authentication?',\n    options: ['To make logging in faster', 'To protect against unauthorized access by requiring two forms of identification', 'To track online activities', 'To encrypt messages'],\n    correctAnswer: 'To protect against unauthorized access by requiring two forms of identification'\n  }];\n  const handleAnswerSelect = (questionIndex, answer) => {\n    const updatedAnswers = [...selectedAnswers];\n    updatedAnswers[questionIndex] = answer;\n    setSelectedAnswers(updatedAnswers);\n  };\n  const handleSubmit = () => {\n    const finalScore = questions.reduce((totalScore, question, index) => selectedAnswers[index] === question.correctAnswer ? totalScore + 1 : totalScore, 0);\n    setScore(finalScore);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lesson-quiz-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Lesson \", lessonNumber, \" Quiz\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), question.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: `question-${index}-option-${i}`,\n          name: `question-${index}`,\n          value: option,\n          checked: selectedAnswers[index] === option,\n          onChange: () => handleAnswerSelect(index, option)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `question-${index}-option-${i}`,\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), score !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your score: \", score, \" / \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onPrevious,\n        children: \"Previous Lesson\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onNext,\n        children: \"Next Lesson\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(LessonQuiz, \"kJiN4xWDgRogdnzG6x6IpWob/UQ=\");\n_c = LessonQuiz;\nexport default LessonQuiz;\nvar _c;\n$RefreshReg$(_c, \"LessonQuiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LessonQuiz","lessonNumber","onNext","onPrevious","_s","selectedAnswers","setSelectedAnswers","score","setScore","questions","question","options","correctAnswer","handleAnswerSelect","questionIndex","answer","updatedAnswers","handleSubmit","finalScore","reduce","totalScore","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","i","type","id","name","value","checked","onChange","htmlFor","onClick","length","_c","$RefreshReg$"],"sources":["C:/Users/iahme/marketingsecure/src/components/LessonQuiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './LessonQuiz.css'; // Optional for styling\r\n\r\nconst LessonQuiz = ({ lessonNumber, onNext, onPrevious }) => {\r\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\r\n  const [score, setScore] = useState(null);\r\n\r\n  const questions = [\r\n    {\r\n      question: 'What is phishing?',\r\n      options: [\r\n        'A technique to secure passwords',\r\n        'An attempt to steal sensitive information by pretending to be a trustworthy entity',\r\n        'A type of firewall',\r\n        'A form of encryption',\r\n      ],\r\n      correctAnswer: 'An attempt to steal sensitive information by pretending to be a trustworthy entity',\r\n    },\r\n    {\r\n      question: 'What should you do if you receive an unsolicited email asking for personal information?',\r\n      options: [\r\n        'Ignore the email',\r\n        'Click the link and provide the information',\r\n        'Mark the email as spam',\r\n        'Respond with your personal information',\r\n      ],\r\n      correctAnswer: 'Mark the email as spam',\r\n    },\r\n    {\r\n      question: 'What is the main purpose of two-factor authentication?',\r\n      options: [\r\n        'To make logging in faster',\r\n        'To protect against unauthorized access by requiring two forms of identification',\r\n        'To track online activities',\r\n        'To encrypt messages',\r\n      ],\r\n      correctAnswer: 'To protect against unauthorized access by requiring two forms of identification',\r\n    },\r\n  ];\r\n\r\n  const handleAnswerSelect = (questionIndex, answer) => {\r\n    const updatedAnswers = [...selectedAnswers];\r\n    updatedAnswers[questionIndex] = answer;\r\n    setSelectedAnswers(updatedAnswers);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const finalScore = questions.reduce(\r\n      (totalScore, question, index) =>\r\n        selectedAnswers[index] === question.correctAnswer ? totalScore + 1 : totalScore,\r\n      0\r\n    );\r\n    setScore(finalScore);\r\n  };\r\n\r\n  return (\r\n    <div className=\"lesson-quiz-card\">\r\n      <h2>Lesson {lessonNumber} Quiz</h2>\r\n      {questions.map((question, index) => (\r\n        <div key={index} className=\"question-card\">\r\n          <p>{question.question}</p>\r\n          {question.options.map((option, i) => (\r\n            <div key={i}>\r\n              <input\r\n                type=\"radio\"\r\n                id={`question-${index}-option-${i}`}\r\n                name={`question-${index}`}\r\n                value={option}\r\n                checked={selectedAnswers[index] === option}\r\n                onChange={() => handleAnswerSelect(index, option)}\r\n              />\r\n              <label htmlFor={`question-${index}-option-${i}`}>{option}</label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n      <button onClick={handleSubmit}>Submit</button>\r\n      {score !== null && <p>Your score: {score} / {questions.length}</p>}\r\n\r\n      <div className=\"navigation-buttons\">\r\n        <button onClick={onPrevious}>Previous Lesson</button>\r\n        <button onClick={onNext}>Next Lesson</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LessonQuiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}