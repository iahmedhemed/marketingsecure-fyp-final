{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iahme\\\\marketingsecure\\\\src\\\\components\\\\quizzes\\\\PhishingQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PhishingQuiz.css'; // Ensure we have the correct styling\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PhishingQuiz = () => {\n  _s();\n  const navigate = useNavigate();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [answered, setAnswered] = useState(false);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const questions = [{\n    question: 'What is phishing?',\n    options: ['A cyberattack', 'A type of fish', 'A programming language'],\n    answer: 0\n  }, {\n    question: 'Which of these is a red flag of phishing?',\n    options: ['Urgent requests for sensitive information', 'Polite request for feedback', 'Personalized greetings'],\n    answer: 0\n  }, {\n    question: 'What should you do if you receive a suspicious email?',\n    options: ['Click the link to verify', 'Delete the email', 'Forward it to the IT department'],\n    answer: 2\n  }, {\n    question: 'What does a phishing email often contain?',\n    options: ['An urgent request', 'A low-level offer', 'Inconspicuous content'],\n    answer: 0\n  }];\n  const handleAnswer = selectedAnswer => {\n    if (!answered) {\n      const correct = selectedAnswer === questions[currentQuestion].answer;\n      setUserAnswers(prev => [...prev, correct]);\n      if (correct) {\n        setScore(score + 1);\n      }\n      setAnswered(true);\n    }\n  };\n  const handleNext = () => {\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setAnswered(false);\n    }\n  };\n  const handlePrevious = () => {\n    if (currentQuestion > 0) {\n      setCurrentQuestion(currentQuestion - 1);\n      setAnswered(false);\n    }\n  };\n  const handleRetry = () => {\n    setScore(0);\n    setCurrentQuestion(0);\n    setAnswered(false);\n    setUserAnswers([]);\n  };\n  const handleFinish = () => {\n    if (score === questions.length) {\n      // If user gets full marks, redirect to the next lesson\n      navigate('/lessons/password-security'); // Change this to the next lesson's route\n    } else {\n      // If not, show retry or return to lesson option\n      alert(\"You didn't get full marks. Try again!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: questions[currentQuestion].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-options\",\n      children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswer(index),\n        disabled: answered,\n        className: answered ? index === questions[currentQuestion].answer ? 'correct' : 'incorrect' : '',\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevious,\n        disabled: currentQuestion === 0,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        disabled: currentQuestion === questions.length - 1 || answered,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), answered && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-result\",\n      children: score === questions.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/lessons/password-security'),\n          children: \"Next Lesson\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRetry,\n          children: \"Retry Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRetry,\n          children: \"Retry Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/lessons/phishing'),\n          children: \"Return to Lesson\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(PhishingQuiz, \"Dg+Nf2YtlZgRsTRgqIdUT9gd9bE=\", false, function () {\n  return [useNavigate];\n});\n_c = PhishingQuiz;\nexport default PhishingQuiz;\nvar _c;\n$RefreshReg$(_c, \"PhishingQuiz\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","PhishingQuiz","_s","navigate","currentQuestion","setCurrentQuestion","score","setScore","answered","setAnswered","userAnswers","setUserAnswers","questions","question","options","answer","handleAnswer","selectedAnswer","correct","prev","handleNext","length","handlePrevious","handleRetry","handleFinish","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/iahme/marketingsecure/src/components/quizzes/PhishingQuiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './PhishingQuiz.css'; // Ensure we have the correct styling\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst PhishingQuiz = () => {\r\n  const navigate = useNavigate();\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [answered, setAnswered] = useState(false);\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n\r\n  const questions = [\r\n    {\r\n      question: 'What is phishing?',\r\n      options: ['A cyberattack', 'A type of fish', 'A programming language'],\r\n      answer: 0,\r\n    },\r\n    {\r\n      question: 'Which of these is a red flag of phishing?',\r\n      options: ['Urgent requests for sensitive information', 'Polite request for feedback', 'Personalized greetings'],\r\n      answer: 0,\r\n    },\r\n    {\r\n      question: 'What should you do if you receive a suspicious email?',\r\n      options: ['Click the link to verify', 'Delete the email', 'Forward it to the IT department'],\r\n      answer: 2,\r\n    },\r\n    {\r\n      question: 'What does a phishing email often contain?',\r\n      options: ['An urgent request', 'A low-level offer', 'Inconspicuous content'],\r\n      answer: 0,\r\n    },\r\n  ];\r\n\r\n  const handleAnswer = (selectedAnswer) => {\r\n    if (!answered) {\r\n      const correct = selectedAnswer === questions[currentQuestion].answer;\r\n      setUserAnswers(prev => [...prev, correct]);\r\n\r\n      if (correct) {\r\n        setScore(score + 1);\r\n      }\r\n\r\n      setAnswered(true);\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (currentQuestion < questions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      setAnswered(false);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentQuestion > 0) {\r\n      setCurrentQuestion(currentQuestion - 1);\r\n      setAnswered(false);\r\n    }\r\n  };\r\n\r\n  const handleRetry = () => {\r\n    setScore(0);\r\n    setCurrentQuestion(0);\r\n    setAnswered(false);\r\n    setUserAnswers([]);\r\n  };\r\n\r\n  const handleFinish = () => {\r\n    if (score === questions.length) {\r\n      // If user gets full marks, redirect to the next lesson\r\n      navigate('/lessons/password-security'); // Change this to the next lesson's route\r\n    } else {\r\n      // If not, show retry or return to lesson option\r\n      alert(\"You didn't get full marks. Try again!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-card\">\r\n      <h2>{questions[currentQuestion].question}</h2>\r\n      <div className=\"quiz-options\">\r\n        {questions[currentQuestion].options.map((option, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handleAnswer(index)}\r\n            disabled={answered}\r\n            className={answered ? (index === questions[currentQuestion].answer ? 'correct' : 'incorrect') : ''}\r\n          >\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"quiz-navigation\">\r\n        <button onClick={handlePrevious} disabled={currentQuestion === 0}>\r\n          Previous\r\n        </button>\r\n        <button onClick={handleNext} disabled={currentQuestion === questions.length - 1 || answered}>\r\n          Next\r\n        </button>\r\n      </div>\r\n\r\n      {/* Show retry and next lesson buttons based on score */}\r\n      {answered && (\r\n        <div className=\"quiz-result\">\r\n          {score === questions.length ? (\r\n            <>\r\n              <button onClick={() => navigate('/lessons/password-security')}>Next Lesson</button>\r\n              <button onClick={handleRetry}>Retry Quiz</button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <button onClick={handleRetry}>Retry Quiz</button>\r\n              <button onClick={() => navigate('/lessons/phishing')}>Return to Lesson</button>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhishingQuiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}