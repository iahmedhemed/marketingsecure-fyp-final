{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iahme\\\\marketingsecure\\\\src\\\\components\\\\FinalQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FinalQuiz = () => {\n  _s();\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [score, setScore] = useState(null);\n  const questions = [{\n    question: 'What is social engineering?',\n    options: ['A technique to secure passwords', 'Manipulating people into divulging confidential information', 'A type of virus', 'A cybersecurity firewall technique'],\n    correctAnswer: 'Manipulating people into divulging confidential information'\n  }, {\n    question: 'What is a strong password?',\n    options: ['123456', 'Password123', 'A combination of uppercase, lowercase, numbers, and special characters', 'Your birthdate'],\n    correctAnswer: 'A combination of uppercase, lowercase, numbers, and special characters'\n  }, {\n    question: 'What is vishing?',\n    options: ['Phishing using voice calls', 'A type of social media scam', 'A technique to protect passwords', 'Using fake websites to gather personal information'],\n    correctAnswer: 'Phishing using voice calls'\n  }];\n  const handleAnswerSelect = (questionIndex, answer) => {\n    const updatedAnswers = [...selectedAnswers];\n    updatedAnswers[questionIndex] = answer;\n    setSelectedAnswers(updatedAnswers);\n  };\n  const handleSubmit = () => {\n    const finalScore = questions.reduce((totalScore, question, index) => selectedAnswers[index] === question.correctAnswer ? totalScore + 1 : totalScore, 0);\n    setScore(finalScore);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Final Quiz: Cybersecurity for Marketing Professionals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), question.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: `question-${index}-option-${i}`,\n          name: `question-${index}`,\n          value: option,\n          checked: selectedAnswers[index] === option,\n          onChange: () => handleAnswerSelect(index, option)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `question-${index}-option-${i}`,\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), score !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your score: \", score, \" / \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(FinalQuiz, \"kJiN4xWDgRogdnzG6x6IpWob/UQ=\");\n_c = FinalQuiz;\nexport default FinalQuiz;\nvar _c;\n$RefreshReg$(_c, \"FinalQuiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FinalQuiz","_s","selectedAnswers","setSelectedAnswers","score","setScore","questions","question","options","correctAnswer","handleAnswerSelect","questionIndex","answer","updatedAnswers","handleSubmit","finalScore","reduce","totalScore","index","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","i","type","id","name","value","checked","onChange","htmlFor","onClick","length","_c","$RefreshReg$"],"sources":["C:/Users/iahme/marketingsecure/src/components/FinalQuiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst FinalQuiz = () => {\r\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\r\n  const [score, setScore] = useState(null);\r\n\r\n  const questions = [\r\n    {\r\n      question: 'What is social engineering?',\r\n      options: [\r\n        'A technique to secure passwords',\r\n        'Manipulating people into divulging confidential information',\r\n        'A type of virus',\r\n        'A cybersecurity firewall technique',\r\n      ],\r\n      correctAnswer: 'Manipulating people into divulging confidential information',\r\n    },\r\n    {\r\n      question: 'What is a strong password?',\r\n      options: [\r\n        '123456',\r\n        'Password123',\r\n        'A combination of uppercase, lowercase, numbers, and special characters',\r\n        'Your birthdate',\r\n      ],\r\n      correctAnswer: 'A combination of uppercase, lowercase, numbers, and special characters',\r\n    },\r\n    {\r\n      question: 'What is vishing?',\r\n      options: [\r\n        'Phishing using voice calls',\r\n        'A type of social media scam',\r\n        'A technique to protect passwords',\r\n        'Using fake websites to gather personal information',\r\n      ],\r\n      correctAnswer: 'Phishing using voice calls',\r\n    },\r\n  ];\r\n\r\n  const handleAnswerSelect = (questionIndex, answer) => {\r\n    const updatedAnswers = [...selectedAnswers];\r\n    updatedAnswers[questionIndex] = answer;\r\n    setSelectedAnswers(updatedAnswers);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const finalScore = questions.reduce(\r\n      (totalScore, question, index) =>\r\n        selectedAnswers[index] === question.correctAnswer ? totalScore + 1 : totalScore,\r\n      0\r\n    );\r\n    setScore(finalScore);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Final Quiz: Cybersecurity for Marketing Professionals</h1>\r\n      {questions.map((question, index) => (\r\n        <div key={index}>\r\n          <p>{question.question}</p>\r\n          {question.options.map((option, i) => (\r\n            <div key={i}>\r\n              <input\r\n                type=\"radio\"\r\n                id={`question-${index}-option-${i}`}\r\n                name={`question-${index}`}\r\n                value={option}\r\n                checked={selectedAnswers[index] === option}\r\n                onChange={() => handleAnswerSelect(index, option)}\r\n              />\r\n              <label htmlFor={`question-${index}-option-${i}`}>{option}</label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n      <button onClick={handleSubmit}>Submit</button>\r\n      {score !== null && <p>Your score: {score} / {questions.length}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinalQuiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}