{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iahme\\\\marketingsecure\\\\src\\\\components\\\\quizzes\\\\PhishingQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PhishingQuiz.css'; // Ensure the new CSS is applied\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhishingQuiz = () => {\n  _s();\n  const questions = [{\n    question: 'What should you check when receiving an unexpected email?',\n    options: ['The subject line', 'The sender’s email address', 'The email’s color scheme'],\n    correctAnswer: 'The sender’s email address'\n  }, {\n    question: 'What is a phishing attack?',\n    options: ['A type of software bug', 'An attack that tries to get sensitive information', 'A legal business practice'],\n    correctAnswer: 'An attack that tries to get sensitive information'\n  }, {\n    question: 'What is one way to verify a suspicious email?',\n    options: ['Ignore the email', 'Click the link', 'Contact the person through another verified method'],\n    correctAnswer: 'Contact the person through another verified method'\n  }, {\n    question: 'What is spear-phishing?',\n    options: ['Phishing targeting a specific individual or organization', 'A phishing attack that uses automated bots', 'A form of phishing done through social media'],\n    correctAnswer: 'Phishing targeting a specific individual or organization'\n  }, {\n    question: 'Which of these is a common phishing tactic?',\n    options: ['Sending personalized messages that seem urgent', 'Providing a secure login link', 'Having a real-time customer support response'],\n    correctAnswer: 'Sending personalized messages that seem urgent'\n  }];\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n  const handleAnswerChange = answer => {\n    const updatedAnswers = [...userAnswers];\n    updatedAnswers[currentQuestionIndex] = answer;\n    setUserAnswers(updatedAnswers);\n  };\n  const handleNext = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      handleSubmit();\n    }\n  };\n  const handleSubmit = () => {\n    let calculatedScore = 0;\n    questions.forEach((question, index) => {\n      if (userAnswers[index] === question.correctAnswer) {\n        calculatedScore++;\n      }\n    });\n    setScore(calculatedScore);\n    setIsSubmitted(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Phishing Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), !isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: questions[currentQuestionIndex].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), questions[currentQuestionIndex].options.map((option, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question-${currentQuestionIndex}`,\n              value: option,\n              onChange: () => handleAnswerChange(option),\n              checked: userAnswers[currentQuestionIndex] === option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), option]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNext,\n            className: \"quiz-button\",\n            children: currentQuestionIndex < questions.length - 1 ? 'Next Question' : 'Submit Quiz'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your Score: \", score, \"/\", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), score === questions.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Great job! You answered everything correctly.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Try again to improve your score.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(PhishingQuiz, \"XS8UrWNlfR6U/r47G4ICGrS9m+8=\");\n_c = PhishingQuiz;\nexport default PhishingQuiz;\nvar _c;\n$RefreshReg$(_c, \"PhishingQuiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PhishingQuiz","_s","questions","question","options","correctAnswer","userAnswers","setUserAnswers","currentQuestionIndex","setCurrentQuestionIndex","isSubmitted","setIsSubmitted","score","setScore","handleAnswerChange","answer","updatedAnswers","handleNext","length","handleSubmit","calculatedScore","forEach","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","i","type","name","value","onChange","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/iahme/marketingsecure/src/components/quizzes/PhishingQuiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './PhishingQuiz.css'; // Ensure the new CSS is applied\r\n\r\nconst PhishingQuiz = () => {\r\n  const questions = [\r\n    {\r\n      question: 'What should you check when receiving an unexpected email?',\r\n      options: ['The subject line', 'The sender’s email address', 'The email’s color scheme'],\r\n      correctAnswer: 'The sender’s email address',\r\n    },\r\n    {\r\n      question: 'What is a phishing attack?',\r\n      options: ['A type of software bug', 'An attack that tries to get sensitive information', 'A legal business practice'],\r\n      correctAnswer: 'An attack that tries to get sensitive information',\r\n    },\r\n    {\r\n      question: 'What is one way to verify a suspicious email?',\r\n      options: ['Ignore the email', 'Click the link', 'Contact the person through another verified method'],\r\n      correctAnswer: 'Contact the person through another verified method',\r\n    },\r\n    {\r\n      question: 'What is spear-phishing?',\r\n      options: ['Phishing targeting a specific individual or organization', 'A phishing attack that uses automated bots', 'A form of phishing done through social media'],\r\n      correctAnswer: 'Phishing targeting a specific individual or organization',\r\n    },\r\n    {\r\n      question: 'Which of these is a common phishing tactic?',\r\n      options: ['Sending personalized messages that seem urgent', 'Providing a secure login link', 'Having a real-time customer support response'],\r\n      correctAnswer: 'Sending personalized messages that seem urgent',\r\n    },\r\n  ];\r\n\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n\r\n  const handleAnswerChange = (answer) => {\r\n    const updatedAnswers = [...userAnswers];\r\n    updatedAnswers[currentQuestionIndex] = answer;\r\n    setUserAnswers(updatedAnswers);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (currentQuestionIndex < questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    } else {\r\n      handleSubmit();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    let calculatedScore = 0;\r\n    questions.forEach((question, index) => {\r\n      if (userAnswers[index] === question.correctAnswer) {\r\n        calculatedScore++;\r\n      }\r\n    });\r\n    setScore(calculatedScore);\r\n    setIsSubmitted(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      <div className=\"quiz-card\">\r\n        <h2>Phishing Quiz</h2>\r\n        {!isSubmitted ? (\r\n          <div>\r\n            <div className=\"question\">\r\n              <p>{questions[currentQuestionIndex].question}</p>\r\n              {questions[currentQuestionIndex].options.map((option, i) => (\r\n                <label key={i}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name={`question-${currentQuestionIndex}`}\r\n                    value={option}\r\n                    onChange={() => handleAnswerChange(option)}\r\n                    checked={userAnswers[currentQuestionIndex] === option}\r\n                  />\r\n                  {option}\r\n                </label>\r\n              ))}\r\n            </div>\r\n            <div className=\"quiz-button-container\">\r\n              <button onClick={handleNext} className=\"quiz-button\">\r\n                {currentQuestionIndex < questions.length - 1 ? 'Next Question' : 'Submit Quiz'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <p>Your Score: {score}/{questions.length}</p>\r\n            {score === questions.length ? (\r\n              <p>Great job! You answered everything correctly.</p>\r\n            ) : (\r\n              <p>Try again to improve your score.</p>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhishingQuiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}