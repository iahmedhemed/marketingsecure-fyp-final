{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iahme\\\\marketingsecure\\\\src\\\\components\\\\quizzes\\\\FinalQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './FinalQuiz.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FinalQuiz = () => {\n  _s();\n  const questions = [{\n    id: 1,\n    question: 'What is phishing?',\n    options: [{\n      text: 'A form of social engineering',\n      correct: true\n    }, {\n      text: 'A type of password manager',\n      correct: false\n    }, {\n      text: 'A computer virus',\n      correct: false\n    }, {\n      text: 'None of the above',\n      correct: false\n    }]\n  }, {\n    id: 2,\n    question: 'What is the best way to create a strong password?',\n    options: [{\n      text: 'Use personal information',\n      correct: false\n    }, {\n      text: 'Use a mix of letters, numbers, and symbols',\n      correct: true\n    }, {\n      text: 'Write it down and keep it safe',\n      correct: false\n    }, {\n      text: 'Use the same password for all accounts',\n      correct: false\n    }]\n  }, {\n    id: 3,\n    question: 'Which of the following is a sign of social engineering?',\n    options: [{\n      text: 'Suspicious email from an unknown sender',\n      correct: true\n    }, {\n      text: 'A regular software update',\n      correct: false\n    }, {\n      text: 'Normal system performance',\n      correct: false\n    }, {\n      text: 'Automatic website redirection',\n      correct: false\n    }]\n  }, {\n    id: 4,\n    question: 'What is vishing?',\n    options: [{\n      text: 'Voice-based phishing',\n      correct: true\n    }, {\n      text: 'A type of malware',\n      correct: false\n    }, {\n      text: 'An email scam',\n      correct: false\n    }, {\n      text: 'A fake login page',\n      correct: false\n    }]\n  }, {\n    id: 5,\n    question: 'Which of the following is a good password manager?',\n    options: [{\n      text: 'Storing passwords in a text file',\n      correct: false\n    }, {\n      text: 'Using the same password for every account',\n      correct: false\n    }, {\n      text: 'Using a trusted password manager',\n      correct: true\n    }, {\n      text: 'Sharing passwords with others',\n      correct: false\n    }]\n  }, {\n    id: 6,\n    question: 'What is a common phishing tactic?',\n    options: [{\n      text: 'Sending a text from a known contact',\n      correct: false\n    }, {\n      text: 'Offering an unsolicited prize',\n      correct: true\n    }, {\n      text: 'Sending a legitimate email from your bank',\n      correct: false\n    }, {\n      text: 'Asking for a password reset link',\n      correct: false\n    }]\n  }, {\n    id: 7,\n    question: 'What should you do if you receive a suspicious phone call asking for sensitive information?',\n    options: [{\n      text: 'Provide the information immediately',\n      correct: false\n    }, {\n      text: 'Hang up and call the company back using a verified number',\n      correct: true\n    }, {\n      text: 'Ignore it and do nothing',\n      correct: false\n    }, {\n      text: 'Call the police right away',\n      correct: false\n    }]\n  }, {\n    id: 8,\n    question: 'What is the first step in identifying a phishing website?',\n    options: [{\n      text: 'Check for a padlock icon in the browser address bar',\n      correct: true\n    }, {\n      text: 'Ensure the website loads quickly',\n      correct: false\n    }, {\n      text: 'Make sure the website is in English',\n      correct: false\n    }, {\n      text: 'Click on all the links to verify the site',\n      correct: false\n    }]\n  }, {\n    id: 9,\n    question: 'What is the primary goal of social engineering?',\n    options: [{\n      text: 'To hack into a computer system',\n      correct: false\n    }, {\n      text: 'To manipulate people into revealing confidential information',\n      correct: true\n    }, {\n      text: 'To steal credit card information',\n      correct: false\n    }, {\n      text: 'To install malware',\n      correct: false\n    }]\n  }, {\n    id: 10,\n    question: 'What should you do if you think youâ€™ve fallen victim to vishing?',\n    options: [{\n      text: 'Do nothing and ignore the call',\n      correct: false\n    }, {\n      text: 'Immediately report it to the authorities',\n      correct: false\n    }, {\n      text: 'Call your bank and report the incident',\n      correct: true\n    }, {\n      text: 'Wait for the attacker to call you again',\n      correct: false\n    }]\n  }];\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const handleAnswerSelection = index => {\n    setSelectedOption(index);\n  };\n  const handleNextQuestion = () => {\n    if (selectedOption !== null) {\n      const currentQuestion = questions[currentQuestionIndex];\n      if (currentQuestion.options[selectedOption].correct) {\n        setCorrectAnswers(prev => prev + 1);\n      }\n      if (currentQuestionIndex < questions.length - 1) {\n        setCurrentQuestionIndex(prev => prev + 1);\n        setSelectedOption(null); // Reset selection for next question\n      } else {\n        setQuizCompleted(true);\n      }\n    }\n  };\n  const handleRetry = () => {\n    setCurrentQuestionIndex(0);\n    setCorrectAnswers(0);\n    setQuizCompleted(false);\n    setSelectedOption(null);\n  };\n  const isFullMarks = correctAnswers === questions.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Final Cybersecurity Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), !quizCompleted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: questions[currentQuestionIndex].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerSelection(index),\n          className: selectedOption === index ? 'selected' : '',\n          children: option.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextQuestion,\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [isFullMarks ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Congratulations! You Passed the Course!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You got all \", questions.length, \" questions correct!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You got \", correctAnswers, \" out of \", questions.length, \" correct.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRetry,\n        children: \"Retry Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), isFullMarks && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"return-home-button\",\n        children: \"Return to Homepage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(FinalQuiz, \"GEfY1maVlcaXz9fIwhIn7Pd84nA=\");\n_c = FinalQuiz;\nexport default FinalQuiz;\nvar _c;\n$RefreshReg$(_c, \"FinalQuiz\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","FinalQuiz","_s","questions","id","question","options","text","correct","selectedOption","setSelectedOption","currentQuestionIndex","setCurrentQuestionIndex","correctAnswers","setCorrectAnswers","quizCompleted","setQuizCompleted","handleAnswerSelection","index","handleNextQuestion","currentQuestion","prev","length","handleRetry","isFullMarks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/iahme/marketingsecure/src/components/quizzes/FinalQuiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './FinalQuiz.css';\r\n\r\nconst FinalQuiz = () => {\r\n  const questions = [\r\n    {\r\n      id: 1,\r\n      question: 'What is phishing?',\r\n      options: [\r\n        { text: 'A form of social engineering', correct: true },\r\n        { text: 'A type of password manager', correct: false },\r\n        { text: 'A computer virus', correct: false },\r\n        { text: 'None of the above', correct: false }\r\n      ]\r\n    },\r\n    {\r\n      id: 2,\r\n      question: 'What is the best way to create a strong password?',\r\n      options: [\r\n        { text: 'Use personal information', correct: false },\r\n        { text: 'Use a mix of letters, numbers, and symbols', correct: true },\r\n        { text: 'Write it down and keep it safe', correct: false },\r\n        { text: 'Use the same password for all accounts', correct: false }\r\n      ]\r\n    },\r\n    {\r\n      id: 3,\r\n      question: 'Which of the following is a sign of social engineering?',\r\n      options: [\r\n        { text: 'Suspicious email from an unknown sender', correct: true },\r\n        { text: 'A regular software update', correct: false },\r\n        { text: 'Normal system performance', correct: false },\r\n        { text: 'Automatic website redirection', correct: false }\r\n      ]\r\n    },\r\n    {\r\n      id: 4,\r\n      question: 'What is vishing?',\r\n      options: [\r\n        { text: 'Voice-based phishing', correct: true },\r\n        { text: 'A type of malware', correct: false },\r\n        { text: 'An email scam', correct: false },\r\n        { text: 'A fake login page', correct: false }\r\n      ]\r\n    },\r\n    {\r\n      id: 5,\r\n      question: 'Which of the following is a good password manager?',\r\n      options: [\r\n        { text: 'Storing passwords in a text file', correct: false },\r\n        { text: 'Using the same password for every account', correct: false },\r\n        { text: 'Using a trusted password manager', correct: true },\r\n        { text: 'Sharing passwords with others', correct: false }\r\n      ]\r\n    },\r\n    {\r\n      id: 6,\r\n      question: 'What is a common phishing tactic?',\r\n      options: [\r\n        { text: 'Sending a text from a known contact', correct: false },\r\n        { text: 'Offering an unsolicited prize', correct: true },\r\n        { text: 'Sending a legitimate email from your bank', correct: false },\r\n        { text: 'Asking for a password reset link', correct: false }\r\n      ]\r\n    },\r\n    {\r\n      id: 7,\r\n      question: 'What should you do if you receive a suspicious phone call asking for sensitive information?',\r\n      options: [\r\n        { text: 'Provide the information immediately', correct: false },\r\n        { text: 'Hang up and call the company back using a verified number', correct: true },\r\n        { text: 'Ignore it and do nothing', correct: false },\r\n        { text: 'Call the police right away', correct: false }\r\n      ]\r\n    },\r\n    {\r\n      id: 8,\r\n      question: 'What is the first step in identifying a phishing website?',\r\n      options: [\r\n        { text: 'Check for a padlock icon in the browser address bar', correct: true },\r\n        { text: 'Ensure the website loads quickly', correct: false },\r\n        { text: 'Make sure the website is in English', correct: false },\r\n        { text: 'Click on all the links to verify the site', correct: false }\r\n      ]\r\n    },\r\n    {\r\n      id: 9,\r\n      question: 'What is the primary goal of social engineering?',\r\n      options: [\r\n        { text: 'To hack into a computer system', correct: false },\r\n        { text: 'To manipulate people into revealing confidential information', correct: true },\r\n        { text: 'To steal credit card information', correct: false },\r\n        { text: 'To install malware', correct: false }\r\n      ]\r\n    },\r\n    {\r\n      id: 10,\r\n      question: 'What should you do if you think youâ€™ve fallen victim to vishing?',\r\n      options: [\r\n        { text: 'Do nothing and ignore the call', correct: false },\r\n        { text: 'Immediately report it to the authorities', correct: false },\r\n        { text: 'Call your bank and report the incident', correct: true },\r\n        { text: 'Wait for the attacker to call you again', correct: false }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n  const [quizCompleted, setQuizCompleted] = useState(false);\r\n\r\n  const handleAnswerSelection = (index) => {\r\n    setSelectedOption(index);\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    if (selectedOption !== null) {\r\n      const currentQuestion = questions[currentQuestionIndex];\r\n      if (currentQuestion.options[selectedOption].correct) {\r\n        setCorrectAnswers((prev) => prev + 1);\r\n      }\r\n\r\n      if (currentQuestionIndex < questions.length - 1) {\r\n        setCurrentQuestionIndex((prev) => prev + 1);\r\n        setSelectedOption(null); // Reset selection for next question\r\n      } else {\r\n        setQuizCompleted(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRetry = () => {\r\n    setCurrentQuestionIndex(0);\r\n    setCorrectAnswers(0);\r\n    setQuizCompleted(false);\r\n    setSelectedOption(null);\r\n  };\r\n\r\n  const isFullMarks = correctAnswers === questions.length;\r\n\r\n  return (\r\n    <div className=\"quiz-card\">\r\n      <h2>Final Cybersecurity Quiz</h2>\r\n      {!quizCompleted ? (\r\n        <>\r\n          <div className=\"question\">\r\n            <p>{questions[currentQuestionIndex].question}</p>\r\n          </div>\r\n          <div className=\"options\">\r\n            {questions[currentQuestionIndex].options.map((option, index) => (\r\n              <button\r\n                key={index}\r\n                onClick={() => handleAnswerSelection(index)}\r\n                className={selectedOption === index ? 'selected' : ''}\r\n              >\r\n                {option.text}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <button onClick={handleNextQuestion}>Next Question</button>\r\n        </>\r\n      ) : (\r\n        <div className=\"result\">\r\n          {isFullMarks ? (\r\n            <>\r\n              <h3>Congratulations! You Passed the Course!</h3>\r\n              <p>You got all {questions.length} questions correct!</p>\r\n            </>\r\n          ) : (\r\n            <p>You got {correctAnswers} out of {questions.length} correct.</p>\r\n          )}\r\n          <button onClick={handleRetry}>Retry Quiz</button>\r\n          {isFullMarks && (\r\n            <Link to=\"/\" className=\"return-home-button\">Return to Homepage</Link>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinalQuiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}