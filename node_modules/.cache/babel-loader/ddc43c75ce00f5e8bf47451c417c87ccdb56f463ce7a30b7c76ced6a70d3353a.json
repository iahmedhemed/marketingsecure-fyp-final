{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iahme\\\\marketingsecure\\\\src\\\\components\\\\quizzes\\\\FinalQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './FinalQuiz.css'; // Make sure you have a CSS file for styling\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FinalQuiz = () => {\n  _s();\n  const questions = [{\n    id: 1,\n    question: 'What is phishing?',\n    options: [{\n      text: 'A form of social engineering',\n      correct: true\n    }, {\n      text: 'A type of password manager',\n      correct: false\n    }, {\n      text: 'A computer virus',\n      correct: false\n    }, {\n      text: 'None of the above',\n      correct: false\n    }]\n  }\n  // Add more questions here, following the same structure\n  ];\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const handleAnswerSelection = index => {\n    setSelectedOption(index);\n  };\n  const handleNextQuestion = () => {\n    if (selectedOption !== null) {\n      const currentQuestion = questions[currentQuestionIndex];\n      if (currentQuestion.options[selectedOption].correct) {\n        setCorrectAnswers(prev => prev + 1);\n      }\n      if (currentQuestionIndex < questions.length - 1) {\n        setCurrentQuestionIndex(prev => prev + 1);\n        setSelectedOption(null); // Reset selection for next question\n      } else {\n        setQuizCompleted(true);\n      }\n    }\n  };\n  const handleRetry = () => {\n    setCurrentQuestionIndex(0);\n    setCorrectAnswers(0);\n    setQuizCompleted(false);\n    setSelectedOption(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Final Cybersecurity Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), !quizCompleted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: questions[currentQuestionIndex].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerSelection(index),\n          className: selectedOption === index ? 'selected' : '',\n          children: option.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextQuestion,\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Quiz Finished!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You got \", correctAnswers, \" out of \", questions.length, \" correct.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRetry,\n        children: \"Retry Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(FinalQuiz, \"GEfY1maVlcaXz9fIwhIn7Pd84nA=\");\n_c = FinalQuiz;\nexport default FinalQuiz;\nvar _c;\n$RefreshReg$(_c, \"FinalQuiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","FinalQuiz","_s","questions","id","question","options","text","correct","selectedOption","setSelectedOption","currentQuestionIndex","setCurrentQuestionIndex","correctAnswers","setCorrectAnswers","quizCompleted","setQuizCompleted","handleAnswerSelection","index","handleNextQuestion","currentQuestion","prev","length","handleRetry","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","onClick","_c","$RefreshReg$"],"sources":["C:/Users/iahme/marketingsecure/src/components/quizzes/FinalQuiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './FinalQuiz.css'; // Make sure you have a CSS file for styling\r\n\r\nconst FinalQuiz = () => {\r\n  const questions = [\r\n    {\r\n      id: 1,\r\n      question: 'What is phishing?',\r\n      options: [\r\n        { text: 'A form of social engineering', correct: true },\r\n        { text: 'A type of password manager', correct: false },\r\n        { text: 'A computer virus', correct: false },\r\n        { text: 'None of the above', correct: false }\r\n      ]\r\n    },\r\n    // Add more questions here, following the same structure\r\n  ];\r\n\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n  const [quizCompleted, setQuizCompleted] = useState(false);\r\n\r\n  const handleAnswerSelection = (index) => {\r\n    setSelectedOption(index);\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    if (selectedOption !== null) {\r\n      const currentQuestion = questions[currentQuestionIndex];\r\n      if (currentQuestion.options[selectedOption].correct) {\r\n        setCorrectAnswers((prev) => prev + 1);\r\n      }\r\n\r\n      if (currentQuestionIndex < questions.length - 1) {\r\n        setCurrentQuestionIndex((prev) => prev + 1);\r\n        setSelectedOption(null); // Reset selection for next question\r\n      } else {\r\n        setQuizCompleted(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRetry = () => {\r\n    setCurrentQuestionIndex(0);\r\n    setCorrectAnswers(0);\r\n    setQuizCompleted(false);\r\n    setSelectedOption(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-card\">\r\n      <h2>Final Cybersecurity Quiz</h2>\r\n      {!quizCompleted ? (\r\n        <>\r\n          <div className=\"question\">\r\n            <p>{questions[currentQuestionIndex].question}</p>\r\n          </div>\r\n          <div className=\"options\">\r\n            {questions[currentQuestionIndex].options.map((option, index) => (\r\n              <button\r\n                key={index}\r\n                onClick={() => handleAnswerSelection(index)}\r\n                className={selectedOption === index ? 'selected' : ''}\r\n              >\r\n                {option.text}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <button onClick={handleNextQuestion}>Next Question</button>\r\n        </>\r\n      ) : (\r\n        <div className=\"result\">\r\n          <h3>Quiz Finished!</h3>\r\n          <p>You got {correctAnswers} out of {questions.length} correct.</p>\r\n          <button onClick={handleRetry}>Retry Quiz</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinalQuiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}