{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iahme\\\\marketingsecure\\\\src\\\\components\\\\quizzes\\\\PhishingQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PhishingQuiz.css'; // Ensure your CSS is linked\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PhishingQuiz = () => {\n  _s();\n  const navigate = useNavigate();\n  const [answers, setAnswers] = useState([{\n    id: 1,\n    text: 'Click the link immediately.',\n    correct: false,\n    selected: false\n  }, {\n    id: 2,\n    text: 'Verify the email sender before clicking.',\n    correct: true,\n    selected: false\n  }, {\n    id: 3,\n    text: 'Forward the email to your IT department and wait for instructions.',\n    correct: false,\n    selected: false\n  }, {\n    id: 4,\n    text: 'Ignore the email and carry on as usual.',\n    correct: false,\n    selected: false\n  }]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const handleAnswerSelection = selectedAnswer => {\n    // Reset all answers to unselected\n    setAnswers(prevAnswers => prevAnswers.map(answer => ({\n      ...answer,\n      selected: false\n    })));\n\n    // Mark the clicked answer as selected\n    setAnswers(prevAnswers => prevAnswers.map(answer => answer.id === selectedAnswer.id ? {\n      ...answer,\n      selected: true\n    } : answer));\n  };\n  const handleNextQuestion = () => {\n    const currentAnswer = answers.find(answer => answer.selected);\n    if (currentAnswer) {\n      if (currentAnswer.correct) {\n        setCorrectAnswers(prev => prev + 1);\n      }\n      if (currentQuestionIndex < answers.length - 1) {\n        setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n      } else {\n        setQuizCompleted(true);\n      }\n    }\n  };\n  const handleRetry = () => {\n    setCorrectAnswers(0);\n    setCurrentQuestionIndex(0);\n    setQuizCompleted(false);\n    setAnswers(prevAnswers => prevAnswers.map(answer => ({\n      ...answer,\n      selected: false\n    })));\n  };\n  const handleReturnToLesson = () => {\n    navigate('/lessons/phishing'); // Redirect to the relevant lesson\n  };\n  const handleNextLesson = () => {\n    navigate('/lessons/password-security'); // Redirect to the next lesson\n  };\n  const currentQuestion = answers[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phishing Attack Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), !quizCompleted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"What should you do if you receive a suspicious phishing email?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: answers.map(answer => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerSelection(answer),\n          className: answer.selected ? 'selected' : '',\n          children: answer.text\n        }, answer.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-buttons\",\n        children: [currentQuestionIndex > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentQuestionIndex(prevIndex => prevIndex - 1),\n          children: \"Previous Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextQuestion,\n          children: \"Next Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Quiz Finished!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You got \", correctAnswers, \" out of \", answers.length, \" correct.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), correctAnswers === answers.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextLesson,\n          className: \"next-lesson-btn\",\n          children: \"Next Lesson\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRetry,\n          className: \"retry-btn\",\n          children: \"Retry Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRetry,\n          className: \"retry-btn\",\n          children: \"Retry Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleReturnToLesson,\n          className: \"return-btn\",\n          children: \"Return to Lesson\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(PhishingQuiz, \"OLMeJ5G73A0ct/NWdIDwc9v8aEA=\", false, function () {\n  return [useNavigate];\n});\n_c = PhishingQuiz;\nexport default PhishingQuiz;\nvar _c;\n$RefreshReg$(_c, \"PhishingQuiz\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","PhishingQuiz","_s","navigate","answers","setAnswers","id","text","correct","selected","currentQuestionIndex","setCurrentQuestionIndex","quizCompleted","setQuizCompleted","correctAnswers","setCorrectAnswers","handleAnswerSelection","selectedAnswer","prevAnswers","map","answer","handleNextQuestion","currentAnswer","find","prev","length","prevIndex","handleRetry","handleReturnToLesson","handleNextLesson","currentQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/iahme/marketingsecure/src/components/quizzes/PhishingQuiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './PhishingQuiz.css'; // Ensure your CSS is linked\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst PhishingQuiz = () => {\r\n  const navigate = useNavigate();\r\n  const [answers, setAnswers] = useState([\r\n    { id: 1, text: 'Click the link immediately.', correct: false, selected: false },\r\n    { id: 2, text: 'Verify the email sender before clicking.', correct: true, selected: false },\r\n    { id: 3, text: 'Forward the email to your IT department and wait for instructions.', correct: false, selected: false },\r\n    { id: 4, text: 'Ignore the email and carry on as usual.', correct: false, selected: false }\r\n  ]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [quizCompleted, setQuizCompleted] = useState(false);\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n\r\n  const handleAnswerSelection = (selectedAnswer) => {\r\n    // Reset all answers to unselected\r\n    setAnswers(prevAnswers =>\r\n      prevAnswers.map(answer => ({\r\n        ...answer,\r\n        selected: false\r\n      }))\r\n    );\r\n\r\n    // Mark the clicked answer as selected\r\n    setAnswers(prevAnswers =>\r\n      prevAnswers.map(answer =>\r\n        answer.id === selectedAnswer.id\r\n          ? { ...answer, selected: true }\r\n          : answer\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    const currentAnswer = answers.find(answer => answer.selected);\r\n    if (currentAnswer) {\r\n      if (currentAnswer.correct) {\r\n        setCorrectAnswers(prev => prev + 1);\r\n      }\r\n      if (currentQuestionIndex < answers.length - 1) {\r\n        setCurrentQuestionIndex(prevIndex => prevIndex + 1);\r\n      } else {\r\n        setQuizCompleted(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRetry = () => {\r\n    setCorrectAnswers(0);\r\n    setCurrentQuestionIndex(0);\r\n    setQuizCompleted(false);\r\n    setAnswers(prevAnswers =>\r\n      prevAnswers.map(answer => ({\r\n        ...answer,\r\n        selected: false\r\n      }))\r\n    );\r\n  };\r\n\r\n  const handleReturnToLesson = () => {\r\n    navigate('/lessons/phishing'); // Redirect to the relevant lesson\r\n  };\r\n\r\n  const handleNextLesson = () => {\r\n    navigate('/lessons/password-security'); // Redirect to the next lesson\r\n  };\r\n\r\n  const currentQuestion = answers[currentQuestionIndex];\r\n\r\n  return (\r\n    <div className=\"quiz-card\">\r\n      <h2>Phishing Attack Quiz</h2>\r\n      {!quizCompleted ? (\r\n        <>\r\n          <div className=\"question\">\r\n            <p>What should you do if you receive a suspicious phishing email?</p>\r\n          </div>\r\n          <div className=\"options\">\r\n            {answers.map(answer => (\r\n              <button\r\n                key={answer.id}\r\n                onClick={() => handleAnswerSelection(answer)}\r\n                className={answer.selected ? 'selected' : ''}\r\n              >\r\n                {answer.text}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <div className=\"navigation-buttons\">\r\n            {currentQuestionIndex > 0 && (\r\n              <button onClick={() => setCurrentQuestionIndex(prevIndex => prevIndex - 1)}>\r\n                Previous Question\r\n              </button>\r\n            )}\r\n            <button onClick={handleNextQuestion}>Next Question</button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"result\">\r\n          <h3>Quiz Finished!</h3>\r\n          <p>You got {correctAnswers} out of {answers.length} correct.</p>\r\n          {correctAnswers === answers.length ? (\r\n            <div className=\"result-buttons\">\r\n              <button onClick={handleNextLesson} className=\"next-lesson-btn\">\r\n                Next Lesson\r\n              </button>\r\n              <button onClick={handleRetry} className=\"retry-btn\">\r\n                Retry Quiz\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"result-buttons\">\r\n              <button onClick={handleRetry} className=\"retry-btn\">\r\n                Retry Quiz\r\n              </button>\r\n              <button onClick={handleReturnToLesson} className=\"return-btn\">\r\n                Return to Lesson\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhishingQuiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}