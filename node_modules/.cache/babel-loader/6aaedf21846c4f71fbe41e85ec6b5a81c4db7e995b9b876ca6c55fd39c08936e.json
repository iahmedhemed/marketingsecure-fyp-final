{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iahme\\\\marketingsecure\\\\src\\\\components\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst quizData = {\n  1: [{\n    id: 1,\n    text: 'What is a common sign of a phishing email?',\n    options: ['Grammatical errors', 'Professional design', 'Personalized greeting', 'Secure sender'],\n    correctAnswer: 'Grammatical errors'\n  }],\n  2: [{\n    id: 2,\n    text: 'Which of the following is a strong password?',\n    options: ['123456', 'password', 'Summer2023!', 'admin'],\n    correctAnswer: 'Summer2023!'\n  }]\n};\nconst QuizPage = () => {\n  _s();\n  const {\n    topicId\n  } = useParams();\n  const navigate = useNavigate();\n  const [answers, setAnswers] = useState({});\n  const questions = quizData[topicId] || [];\n  const handleChange = (questionId, selected) => {\n    setAnswers({\n      ...answers,\n      [questionId]: selected\n    });\n  };\n  const handleSubmit = () => {\n    let score = 0;\n    questions.forEach(q => {\n      if (answers[q.id] === q.correctAnswer) score += 1;\n    });\n    navigate(`/results/${score}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: question.id,\n          value: option,\n          onChange: () => handleChange(question.id, option)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), option]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"+2dZOTIPaP4bS2kweAG7gS7bT/U=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","jsxDEV","_jsxDEV","quizData","id","text","options","correctAnswer","QuizPage","_s","topicId","navigate","answers","setAnswers","questions","handleChange","questionId","selected","handleSubmit","score","forEach","q","children","fileName","_jsxFileName","lineNumber","columnNumber","map","question","option","index","type","name","value","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/iahme/marketingsecure/src/components/QuizPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nconst quizData = {\r\n  1: [\r\n    {\r\n      id: 1,\r\n      text: 'What is a common sign of a phishing email?',\r\n      options: ['Grammatical errors', 'Professional design', 'Personalized greeting', 'Secure sender'],\r\n      correctAnswer: 'Grammatical errors',\r\n    },\r\n  ],\r\n  2: [\r\n    {\r\n      id: 2,\r\n      text: 'Which of the following is a strong password?',\r\n      options: ['123456', 'password', 'Summer2023!', 'admin'],\r\n      correctAnswer: 'Summer2023!',\r\n    },\r\n  ],\r\n};\r\n\r\nconst QuizPage = () => {\r\n  const { topicId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [answers, setAnswers] = useState({});\r\n  const questions = quizData[topicId] || [];\r\n\r\n  const handleChange = (questionId, selected) => {\r\n    setAnswers({ ...answers, [questionId]: selected });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    let score = 0;\r\n    questions.forEach((q) => {\r\n      if (answers[q.id] === q.correctAnswer) score += 1;\r\n    });\r\n    navigate(`/results/${score}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Quiz</h2>\r\n      {questions.map((question) => (\r\n        <div key={question.id}>\r\n          <p>{question.text}</p>\r\n          {question.options.map((option, index) => (\r\n            <label key={index}>\r\n              <input\r\n                type=\"radio\"\r\n                name={question.id}\r\n                value={option}\r\n                onChange={() => handleChange(question.id, option)}\r\n              />\r\n              {option}\r\n            </label>\r\n          ))}\r\n        </div>\r\n      ))}\r\n      <button onClick={handleSubmit}>Submit</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}