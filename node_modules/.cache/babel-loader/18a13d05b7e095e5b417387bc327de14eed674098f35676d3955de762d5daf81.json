{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iahme\\\\marketingsecure\\\\src\\\\components\\\\quizzes\\\\PhishingQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhishingQuiz = () => {\n  _s();\n  const questions = [{\n    question: 'What should you check when receiving an unexpected email?',\n    options: ['The subject line', 'The sender’s email address', 'The email’s color scheme'],\n    correctAnswer: 'The sender’s email address'\n  }, {\n    question: 'What is a phishing attack?',\n    options: ['A type of software bug', 'An attack that tries to get sensitive information', 'A legal business practice'],\n    correctAnswer: 'An attack that tries to get sensitive information'\n  }, {\n    question: 'What is one way to verify a suspicious email?',\n    options: ['Ignore the email', 'Click the link', 'Contact the person through another verified method'],\n    correctAnswer: 'Contact the person through another verified method'\n  }];\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n  const handleAnswerChange = (index, answer) => {\n    const updatedAnswers = [...userAnswers];\n    updatedAnswers[index] = answer;\n    setUserAnswers(updatedAnswers);\n  };\n  const handleSubmit = () => {\n    let calculatedScore = 0;\n    questions.forEach((question, index) => {\n      if (userAnswers[index] === question.correctAnswer) {\n        calculatedScore++;\n      }\n    });\n    setScore(calculatedScore);\n    setIsSubmitted(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phishing Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), !isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), question.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: `question-${index}`,\n            value: option,\n            onChange: () => handleAnswerChange(index, option),\n            checked: userAnswers[index] === option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this), option]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Score: \", score, \"/\", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), score === questions.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Great job! You answered everything correctly.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Try again to improve your score.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(PhishingQuiz, \"tY2zfrBPz15Dl59CoKH8sfzK4QM=\");\n_c = PhishingQuiz;\nexport default PhishingQuiz;\nvar _c;\n$RefreshReg$(_c, \"PhishingQuiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PhishingQuiz","_s","questions","question","options","correctAnswer","userAnswers","setUserAnswers","isSubmitted","setIsSubmitted","score","setScore","handleAnswerChange","index","answer","updatedAnswers","handleSubmit","calculatedScore","forEach","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","i","type","name","value","onChange","checked","onClick","length","_c","$RefreshReg$"],"sources":["C:/Users/iahme/marketingsecure/src/components/quizzes/PhishingQuiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst PhishingQuiz = () => {\r\n  const questions = [\r\n    {\r\n      question: 'What should you check when receiving an unexpected email?',\r\n      options: ['The subject line', 'The sender’s email address', 'The email’s color scheme'],\r\n      correctAnswer: 'The sender’s email address',\r\n    },\r\n    {\r\n      question: 'What is a phishing attack?',\r\n      options: ['A type of software bug', 'An attack that tries to get sensitive information', 'A legal business practice'],\r\n      correctAnswer: 'An attack that tries to get sensitive information',\r\n    },\r\n    {\r\n      question: 'What is one way to verify a suspicious email?',\r\n      options: ['Ignore the email', 'Click the link', 'Contact the person through another verified method'],\r\n      correctAnswer: 'Contact the person through another verified method',\r\n    },\r\n  ];\r\n\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n\r\n  const handleAnswerChange = (index, answer) => {\r\n    const updatedAnswers = [...userAnswers];\r\n    updatedAnswers[index] = answer;\r\n    setUserAnswers(updatedAnswers);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    let calculatedScore = 0;\r\n    questions.forEach((question, index) => {\r\n      if (userAnswers[index] === question.correctAnswer) {\r\n        calculatedScore++;\r\n      }\r\n    });\r\n    setScore(calculatedScore);\r\n    setIsSubmitted(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      <h2>Phishing Quiz</h2>\r\n      {!isSubmitted ? (\r\n        <div>\r\n          {questions.map((question, index) => (\r\n            <div key={index} className=\"question\">\r\n              <p>{question.question}</p>\r\n              {question.options.map((option, i) => (\r\n                <label key={i}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name={`question-${index}`}\r\n                    value={option}\r\n                    onChange={() => handleAnswerChange(index, option)}\r\n                    checked={userAnswers[index] === option}\r\n                  />\r\n                  {option}\r\n                </label>\r\n              ))}\r\n            </div>\r\n          ))}\r\n          <button onClick={handleSubmit}>Submit</button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <p>Your Score: {score}/{questions.length}</p>\r\n          {score === questions.length ? (\r\n            <p>Great job! You answered everything correctly.</p>\r\n          ) : (\r\n            <p>Try again to improve your score.</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhishingQuiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}